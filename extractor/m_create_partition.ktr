<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>m_create_partition</name>
    <description />
    <extended_description />
    <trans_version />
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
      <parameter>
        <name>DATABASE_TYPE</name>
        <default_value />
        <description />
      </parameter>
      <parameter>
        <name>INPUT_PARTITION_STATEMENT</name>
        <default_value />
        <description />
      </parameter>
      <parameter>
        <name>INPUT_TABLE_NAME</name>
        <default_value />
        <description />
      </parameter>
      <parameter>
        <name>INPUT_TABLE_SCHEMA</name>
        <default_value />
        <description />
      </parameter>
      <parameter>
        <name>PARTITION_FIELD</name>
        <default_value />
        <description />
      </parameter>
      <parameter>
        <name>PARTITION_FIELD_CASTING</name>
        <default_value />
        <description />
      </parameter>
      <parameter>
        <name>PARTITION_FORMAT</name>
        <default_value>YYYYMM</default_value>
        <description />
      </parameter>
      <parameter>
        <name>PARTITION_HAS_PREFIX</name>
        <default_value>1</default_value>
        <description />
      </parameter>
      <parameter>
        <name>PARTITION_LENGTH</name>
        <default_value />
        <description />
      </parameter>
      <parameter>
        <name>PARTITION_MINIMUN</name>
        <default_value />
        <description />
      </parameter>
      <parameter>
        <name>PARTITION_TYPE</name>
        <default_value />
        <description />
      </parameter>
      <parameter>
        <name>WHERE_CONDITION_TO_RECOVER</name>
        <default_value>1=1</default_value>
        <description />
      </parameter>
    </parameters>
    <log>
      <trans-log-table>
        <connection />
        <schema />
        <table />
        <size_limit_lines />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject />
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject />
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject />
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject />
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject />
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection />
        <schema />
        <table />
        <interval />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection />
        <schema />
        <table />
        <timeout_days />
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection />
      <table />
      <field />
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file />
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2017/04/11 10:04:48.892</created_date>
    <modified_user>-</modified_user>
    <modified_date>2017/04/11 10:04:48.892</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <connection>
    <name>GENERIC_CONNECTION</name>
    <server />
    <type>GENERIC</type>
    <access>Native</access>
    <database />
    <port>1521</port>
    <username>${DB_USER}</username>
    <password>${DB_PASSWORD}</password>
    <servername />
    <data_tablespace />
    <index_tablespace />
    <attributes>
      <attribute>
        <code>CUSTOM_DRIVER_CLASS</code>
        <attribute>${JDBC_DRIVER_CLASS}</attribute>
      </attribute>
      <attribute>
        <code>CUSTOM_URL</code>
        <attribute>${JDBC_URL}</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>1521</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <order>
    <hop>
      <from>Sort partition</from>
      <to>Build partition condition</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Build partition condition</from>
      <to>Copy rows to result</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Get partition</from>
      <to>Generate partition range</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Data grid</from>
      <to>Generate partition range</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Generate partition range</from>
      <to>Write to log</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Write to log</from>
      <to>Sort partition</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <step>
    <name>Build partition condition</name>
    <type>UserDefinedJavaClass</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <definitions>
      <definition>
        <class_type>TRANSFORM_CLASS</class_type>
        <class_name>Processor</class_name>
        <class_source>import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException {
    Object[] r = getRow();
    boolean process = (r != null);

    if (process) {
		String partitionCondition = "";
        String partitionRecoveryCondition = "";

		//Get a calendar instance.
        Calendar calendar = Calendar.getInstance();
        calendar.clear();

        //Get the partition value;
        String partition = get(Fields.In, "partition").getString(r);

        //Get the process variables.
        String databaseType = getVariable("DATABASE_TYPE", "");
        String partitionField = getVariable("PARTITION_FIELD", "");
        String partitionFormat = getVariable("PARTITION_FORMAT", "");
        String partitionType = getVariable("PARTITION_TYPE", "");
        String partitionLength = getVariable("PARTITION_LENGTH", "");
        String partitionHasPrefix = getVariable("PARTITION_HAS_PREFIX", "");
		String partitionFieldCasting = getVariable("PARTITION_FIELD_CASTING", "");

        //Identifies if the partition is from ID.
        if (partitionType.equalsIgnoreCase("ID")) {
            Integer value = Integer.valueOf(partition);
            Integer length = Integer.valueOf(partitionLength);

            partitionCondition = partitionField + " BETWEEN " + (value - (length - 1)) + " AND " + value;
            partitionRecoveryCondition = partitionField + " >= " + (value - (length - 1));
        } else {
            String partitionFrom = "";
            String partitionTo = "";
			String dateMask = "yyyy-MM-dd";
			
			//Identifies the date mask.
			if (databaseType.equalsIgnoreCase("SAP_HANA")) {
				dateMask = "yyyyMMdd";			
			}
			
			//Defines the date to string format. 
            SimpleDateFormat formatter = new SimpleDateFormat(dateMask);

            if (partitionFormat.equalsIgnoreCase("YYYY")) {
                //Identifies the year.
                calendar.set(Calendar.YEAR, Integer.valueOf(partition.substring(0, 4)));
                //Identifies the years first day.
                Date dateFrom = calendar.getTime();
                //Identifies the years last day.
                Calendar dateTo = Calendar.getInstance();
                dateTo.clear();
                dateTo.set(calendar.get(Calendar.YEAR), calendar.getActualMaximum(Calendar.MONTH), calendar.getActualMaximum(Calendar.DAY_OF_MONTH));
                //Formats the years first and last day.
                partitionFrom = formatter.format(dateFrom.getTime());
                partitionTo = formatter.format(dateTo.getTime());

            } else if (partitionFormat.equalsIgnoreCase("YYYYMM")) {
                //Identifies the year and month.
                calendar.set(Calendar.YEAR, Integer.valueOf(partition.substring(0, 4)));
                calendar.set(Calendar.MONTH, Integer.valueOf(partition.substring(4, 6)) - 1);
                //Identifies the months first day.
                Date dateFrom = calendar.getTime();
                //Identifies the month last day.
                Calendar dateTo = Calendar.getInstance();
                dateTo.clear();
                dateTo.set(calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH), calendar.getActualMaximum(Calendar.DAY_OF_MONTH));
                //Formats the month first and last day.
                partitionFrom = formatter.format(dateFrom.getTime());
                partitionTo = formatter.format(dateTo.getTime());

            } else if (partitionFormat.equalsIgnoreCase("YYYYWW")) {         
                //Defines if the database compliant with ISO.
				if (databaseType.equalsIgnoreCase("MYSQL")) {
					calendar.setMinimalDaysInFirstWeek(4);
				}

				//Defines the first day of week.
                calendar.setFirstDayOfWeek(Calendar.MONDAY);                
				//Identifies the year and week.
                calendar.set(Calendar.YEAR, Integer.valueOf(partition.substring(0, 4)));
                calendar.set(Calendar.WEEK_OF_YEAR, Integer.valueOf(partition.substring(4, 6)));
                //Identifies the weeks first day.
                Date dateFrom = calendar.getTime();
                //Identifies the weeks last day.
                calendar.add(Calendar.DAY_OF_MONTH, 6);
                Date dateTo = calendar.getTime();
                //Formats the week first and last day.
                partitionFrom = formatter.format(dateFrom.getTime());
                partitionTo = formatter.format(dateTo.getTime());

            } else if (partitionFormat.equalsIgnoreCase("YYYYMMDD")) {
                //Identifies the year, month and day.
                calendar.set(Calendar.YEAR, Integer.valueOf(partition.substring(0, 4)));
                calendar.set(Calendar.MONTH, Integer.valueOf(partition.substring(4, 6)) - 1);
                calendar.set(Calendar.DAY_OF_MONTH, Integer.valueOf(partition.substring(6, 8)));
                //Formats the day.
                partitionFrom = formatter.format(calendar.getTime());
                partitionTo = formatter.format(calendar.getTime());
            }

            //Identifies if the partition value is invalid.
            if (partition.equalsIgnoreCase("19000101") || partition.equalsIgnoreCase("190001") || partition.equalsIgnoreCase("1900") ) {
                if (databaseType.equalsIgnoreCase("SAP_HANA")) {
                    partitionCondition = partitionField + " = '00000000'";
                } else {
                    //partitionCondition = partitionField + " IS NULL";
					partitionCondition = partitionFieldCasting + " = '" + partition + "'";	
                }

                partitionRecoveryCondition = "1=1";
            } else if (partitionType.equalsIgnoreCase("DATE")) {
                //Defines the condition to partition based on a date field.
                partitionCondition = partitionField + " BETWEEN '" + partitionFrom + "' AND '" + partitionTo + "'";
                partitionRecoveryCondition = partitionField + " >= '" + partitionFrom + "'";

            } else if (partitionType.equalsIgnoreCase("TIMESTAMP")) {
                //Defines the condition to partition based on a timestamp field.
                if (databaseType.equalsIgnoreCase("SAP_HANA")) {
                    //Identifies if the partition field in the SAP BO has the prefix "0".
                    String prefix = "1".equals(partitionHasPrefix) ? "0" : "";

                    partitionCondition = partitionField + " BETWEEN '" + prefix + partitionFrom + "000000'" + " AND '" + partitionTo + "235959'";
                    partitionRecoveryCondition = partitionField + " >= '" + prefix + partitionFrom + "000000'";
                } else {
                    partitionCondition = partitionField + " BETWEEN '" + partitionFrom + " 00:00:00' AND '" + partitionTo + " 23:59:59'";
                    partitionRecoveryCondition = partitionField + " >= '" + partitionFrom + " 00:00:00'";
                }
            }
        }

        //Creates the output row. 
        Object[] output = createOutputRow(r, data.outputRowMeta.size());

        //Set the partition condition.
        get(Fields.Out, "sql_condition").setValue(output, partitionCondition);
        get(Fields.Out, "sql_recovery_condition").setValue(output, partitionRecoveryCondition);

        //Send the row to the output port. 
        putRow(data.outputRowMeta, output);
    } else {
        setOutputDone();
    }

    return process;
}</class_source>
      </definition>
    </definitions>
    <fields>
      <field>
        <field_name>sql_condition</field_name>
        <field_type>String</field_type>
        <field_length>-1</field_length>
        <field_precision>-1</field_precision>
      </field>
      <field>
        <field_name>sql_recovery_condition</field_name>
        <field_type>String</field_type>
        <field_length>-1</field_length>
        <field_precision>-1</field_precision>
      </field>
    </fields>
    <clear_result_fields>N</clear_result_fields>
    <info_steps />
    <target_steps />
    <usage_parameters />
    <attributes />
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>736</xloc>
      <yloc>48</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Copy rows to result</name>
    <type>RowsToResult</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <attributes />
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>912</xloc>
      <yloc>48</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Data grid</name>
    <type>DataGrid</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <fields>
      <field>
        <name>partition_from</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>partition_to</name>
        <type>String</type>
        <format />
        <currency />
        <decimal />
        <group />
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
    </fields>
    <data>
      <line>
        <item>201501</item>
        <item>201802</item>
      </line>
    </data>
    <attributes />
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>96</xloc>
      <yloc>160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Generate partition range</name>
    <type>UserDefinedJavaClass</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <definitions>
      <definition>
        <class_type>TRANSFORM_CLASS</class_type>
        <class_name>Processor</class_name>
        <class_source>//import java.time.LocalDate;
//import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException {
    Object[] r = getRow();
    boolean process = (r != null);

    if (process) {
        List partitions = new ArrayList();
	
		partitions.add("1900");

		for (Object partition : partitions) {
  			//Creates the output row. 
        	Object[] output = createOutputRow(r, data.outputRowMeta.size());   

       		//Set the partition condition.
        	get(Fields.Out, "partition").setValue(output, partition);       
        
        	//Send the row to the output port. 
        	putRow(data.outputRowMeta, output);
		}
    } else {
        setOutputDone();
    }

    return process;
}</class_source>
      </definition>
    </definitions>
    <fields>
      <field>
        <field_name>partition</field_name>
        <field_type>String</field_type>
        <field_length>-1</field_length>
        <field_precision>-1</field_precision>
      </field>
    </fields>
    <clear_result_fields>N</clear_result_fields>
    <info_steps />
    <target_steps />
    <usage_parameters />
    <attributes />
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>256</xloc>
      <yloc>48</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Get partition</name>
    <type>TableInput</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <connection>GENERIC_CONNECTION</connection>
    <sql>${INPUT_PARTITION_STATEMENT}</sql>
    <limit>0</limit>
    <lookup />
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <attributes />
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>96</xloc>
      <yloc>48</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Sort partition</name>
    <type>SortRows</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <directory>${GLOVE_TEMP}</directory>
    <prefix>out</prefix>
    <sort_size>1000000</sort_size>
    <free_memory />
    <compress>Y</compress>
    <compress_variable />
    <unique_rows>Y</unique_rows>
    <fields>
      <field>
        <name>partition</name>
        <ascending>Y</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <presorted>N</presorted>
      </field>
    </fields>
    <attributes />
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>576</xloc>
      <yloc>48</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Write to log</name>
    <type>WriteToLog</type>
    <description />
    <distribute>Y</distribute>
    <custom_distribution />
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name />
    </partitioning>
    <loglevel>log_level_basic</loglevel>
    <displayHeader>Y</displayHeader>
    <limitRows>N</limitRows>
    <limitRowsNumber>0</limitRowsNumber>
    <logmessage />
    <fields>
      </fields>
    <attributes />
    <cluster_schema />
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>416</xloc>
      <yloc>48</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
  <attributes />
</transformation>
